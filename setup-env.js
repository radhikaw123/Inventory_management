#!/usr/bin/env node

/**
 * Setup script to create .env file for database configuration
 */

const fs = require('fs');
const readline = require('readline');
const path = require('path');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function setupEnv() {
    console.log('\nüîß Setting up environment variables (.env file)\n');
    
    const envPath = path.join(__dirname, '.env');
    
    // Check if .env already exists
    if (fs.existsSync(envPath)) {
        const overwrite = await question('‚ö†Ô∏è  .env file already exists. Do you want to overwrite it? (y/n): ');
        if (overwrite.toLowerCase() !== 'y') {
            console.log('‚ùå Setup cancelled.');
            rl.close();
            return;
        }
    }
    
    console.log('üìù Please provide the following information:\n');
    
    const dbHost = await question('MySQL Host [localhost]: ') || 'localhost';
    const dbUser = await question('MySQL User [root]: ') || 'root';
    const dbPassword = await question('MySQL Password: ');
    const dbName = await question('Database Name [inventory_db]: ') || 'inventory_db';
    const port = await question('Server Port [3000]: ') || '3000';
    
    // Create .env content
    const envContent = `# MySQL Database Configuration
DB_HOST=${dbHost}
DB_USER=${dbUser}
DB_PASSWORD=${dbPassword}
DB_NAME=${dbName}

# Server Configuration
PORT=${port}

# Generated by setup-env.js on ${new Date().toISOString()}
`;
    
    try {
        fs.writeFileSync(envPath, envContent);
        console.log('\n‚úÖ .env file created successfully!');
        console.log(`üìÅ Location: ${envPath}\n`);
        console.log('üìã Next steps:');
        console.log('   1. Make sure MySQL is running');
        console.log('   2. Run: node setup-database.js (to create database and tables)');
        console.log('   3. Run: npm start (to start the server)\n');
    } catch (error) {
        console.error('\n‚ùå Error creating .env file:', error.message);
    }
    
    rl.close();
}

setupEnv();

